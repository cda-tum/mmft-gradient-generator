# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CDA_HOST_NAME: tueicda-cda.srv.mwn.de
  CDA_USER_NAME: web-user
  CDA_TARGET_DIR: /var/www/cda/app/gradient-generator/

jobs:
  deploy:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Build using Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build
    - name: Setup SSH via the stored Action Secrets
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.KNOWN_HOSTS }}" >> ~/.ssh/known_hosts
        echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/my_rsync_key
        echo "IdentityFile ~/.ssh/my_rsync_key" >> ~/.ssh/config
        chmod -R 700 ~/.ssh
    - name: Deploy webpage from ref ${{ github.ref }}
      working-directory: ${{ github.workspace }}
      run: rsync --rsync-path="mkdir -p ${CDA_TARGET_DIR} && rsync" -rvz --update -e ssh build/ ${CDA_USER_NAME}@${CDA_HOST_NAME}:${CDA_TARGET_DIR}
